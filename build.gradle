plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.34.0"

}

targetCompatibility = JavaVersion.VERSION_16
group = 'com.lt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "16"

repositories {
    mavenCentral()
}
//annotationProcessor('org.hibernate:hibernate-jpamodelgen:5.3.7.Final')

dependencies {
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.18'
    //   implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.4'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.json:json:20220320'
    implementation 'com.google.code.gson:gson:2.9.0'
   // implementation 'org.keycloak:keycloak-spring-boot-starter:18.0.2'
    implementation 'com.alipay.sdk:alipay-sdk-java:4.31.48.ALL'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    //implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'


    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.google.zxing:javase:3.3.0'

    implementation 'net.sf.barcode4j:barcode4j:2.1'
    implementation 'net.sourceforge.barbecue:barbecue:1.5-beta1'
    //implementation 'com.github.kenglxn.qrgen:javase:2.6.0'
    implementation 'cn.gjing:common:1.1.8'
 //   implementation 'io.projectreactor:reactor-tools:3.4.21'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.javatuples:javatuples:1.2'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'

    implementation 'com.thoughtworks.xstream:xstream:1.4.10'
  //implementation 'com.github.wxpay:wxpay-sdk:0.0.3'
   // implementation group: 'com.github.wxpay', name: 'wxpay-sdk', version: '3.0.9'
    //implementation 'com.github.wxpay:WXPay-SDK-Java:0.0.4'
    implementation 'com.github.binarywang:weixin-java-miniapp:4.3.0'
    implementation 'com.github.binarywang:weixin-java-pay:4.3.0'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.23'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'com.alibaba:easyexcel:3.1.1'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-55', version: '2.17.1'


    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.2'
    implementation 'org.springframework.retry:spring-retry:1.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'cn.hutool:hutool-core:5.8.5'
    implementation group: 'cn.hutool', name: 'hutool-captcha', version: '5.8.5'

    implementation group: 'com.auth0', name: 'java-jwt', version: '4.0.0'
    implementation group: 'com.sun.jna', name: 'jna', version: '3.0.9'
    implementation 'com.itextpdf:itext-asian:5.2.0'
    implementation 'com.itextpdf:itextpdf:5.5.13'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation 'com.github.ua-parser:uap-java:1.5.3'
    implementation 'org.hibernate:hibernate-jpamodelgen'  //:5.3.7.Final
  // annotationProcessor('org.hibernate:hibernate-jpamodelgen')
    implementation group: 'org.jxls', name: 'jxls-poi', version: '2.12.0'

    implementation 'org.jxls:jxls:2.12.0'
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.2.Final'

    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.2.Final"
    implementation 'org.springframework.statemachine:spring-statemachine-core:3.2.0'

    implementation group: 'org.camunda.community', name: 'camunda-engine-rest-client-openapi-springboot', version: '7.17.4'
    implementation group: 'org.camunda.bpm', name: 'camunda-external-task-client', version: '7.17.0'
    implementation group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-external-task-client', version: '7.17.0'

   // implementation 'com.alipay.sdk:alipay-sdk-java:4.16.2.ALL'
    implementation group: 'com.alipay.sdk', name: 'alipay-sdk-java', version: '4.33.26.ALL'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
   // testImplementation 'org.springframework.amqp:spring-boot-starter-data-redis'

    implementation 'commons-io:commons-io:2.11.0'
    //   implementation group: 'org.springframework.statemachine', name: 'spring-statemachine-data-jpa' //, version: '3.2.0'
 //implementation group: 'org.springframework.statemachine', name: 'spring-statemachine-autoconfigure' //, version: '3.2.0'

}


tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


docker {

    name "$project.group/$project.name:$project.version"
    //tags 'latest'
    dependsOn build
    files jar.archivePath
    //, processResources, bootJar.archivePath, './build/themyscira-openapi-with-aws-extensions.json'

    // 将 bootJar 任务的输出内容，复制到 build/docker/dependency 下
    // build/docker/ 为 Docker 工作目录
    // 后续 Dockerfile 中复制文件时，都相对这个位置进行
    //copySpec.from(tasks.bootJar.outputs.files.singleFile).into("dependency")


    //copySpec.from("secretData/").into("data")
    //files bootJar
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs([BUILD_VERSION: project.version,JAR_FILE: project.name])


}


/*
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}


sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }
}*/
